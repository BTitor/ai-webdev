Introduce Ourselves 
------------------------------------------------------------------------
Discuss goals of course
  1. expose students to software tools  
  2. practical experience (minimize listening to lectures)
  3. provide a platform that students can build off of
------------------------------------------------------------------------
Create GitHub Account

github - version control system
  1. Lets you maintain a versioned history of your work.
    - ex. You can lose work if you write over something and save the document.
    - ex. If your code is crashing and you don't know why, go back to a working version. (updating libraries example)
    - ex. You can compare your versions to find bugs in your code.
  2. Provides an open-source platform to learn from eachother


Provides unlimited private repositories if you are a student
Free tools for students:
https://education.github.com/pack
------------------------------------------------------------------------
Fork Github Repository

Cloning vs Forking:
  Forking a repository lets you create a copy of another repository that you can edit.
  Fetch upstream option

additional steps for each lesson:
1. Navigate to lesson-01.ipynb and open the file
2. Click the two square icon to copy the raw contents of the file
3. Click on the lesson-01 folder and then the "Add File" dropdown button
4. Select the option to create a new file and set the file name to lesson-01.yourGithubName.ipynb
5. Paste the raw contents you copied into the new file
6. Change the colab->name to lesson-01.yourGithubName.ipynb
7. Change the url in the colab fiile link so that it matches the path to your notebook
8. Send that path to the instructors


------------------------------------------------------------------------
Comparison of Perceptrons/biological neurons

Biological Neurons
  1. Output magnitude doesn't change
  2. Rely on neurotransmitters to communicate

Perceptrons
  1. no concept of time
  2. output magnitude changes with weights
  3. rely on a bias (b=1) term to help networks model data that isn't centered around the origin  

------------------------------------------------------------------------
Activation Functions

move left->right, top->bottom 

------------------------------------------------------------------------
Open TensorFlow's Neural Network Playground

value of this website
  1. need for these types of websites
  2. link to github repo

introduce website components
  1. start with networks
    - compare  website image with perceptron 
  2. move left->right, top->bottom
  3. URL

------------------------------------------------------------------------
identity fn
  1. give an example of variable scope
  2. call function at bottom initially to debug

------------------------------------------------------------------------
plot act fn
  1. Camel Case
  2. differences between plot/show 

------------------------------------------------------------------------
2 Cluster (linear)
  1. compare website image with perceptron 
  2. discuss 3 weights and bias term
    - modify weights to visualize the similarity with y=mx+b
    - say that weight at the end of net is unorthodox
  3. compare training speed with 1hlnode and 8hlnodes

------------------------------------------------------------------------
XOR Problem (sigmoid)
  1. historical significance (linear line can't separate data)
  2. switch to sigmoid
  3. find smallest #nodes required 

------------------------------------------------------------------------
Circle Problem (tanh)
  1. output ranges for sigmoid and tanh
  2. find smallest #nodes required 
  3. Compare learning rate

------------------------------------------------------------------------
Spiral Problem (relu)
  1. network width/depth
  2. network could be solved if more nodes were allowed 
  2. compare output visualizations of neurons 
  3. ratio of train/test


------------------------------------------------------------------------
plot multiple activation functions 
  1. work double for loop logic and variables

  